/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.15.2.1 2003/02/27 05:59:41 rstory Exp $
 *
 * $Id: allowPOP3Table.h,v 1.1 2003/12/01 14:27:15 guga Exp $
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef ALLOWPOP3TABLE_H
#define ALLOWPOP3TABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

/** #define values**/
#ifndef MAX_VALUES
#define MAX_VALUES
	
#define MAX_OID_LEN 128
#define MAX_VAR_LEN 255
#define NO_OF_FIELDS 5
#define USER_SUCCESS 1
#define USER_FAILURE 2
#define USER_TRAP 10
#define USER_ROW_CREATE 4
#define USER_ROW_DELETE 6

#endif
	
#define POP3_CONTAINER_FILE "allowPOP3Table.conf"

        /** Index allowPOP3Index is internal */

typedef struct allowPOP3Table_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
        /** UNSIGNED32 = ASN_UNSIGNED */
            unsigned long allowPOP3Index;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char allowPOP3ID[255];
            long allowPOP3ID_len;

        /** IPADDR = ASN_IPADDRESS */
            unsigned long allowPOP3IPAddress;

        /** INTEGER = ASN_INTEGER */
            long allowPOP3PortNo;

        /** RowStatus = ASN_INTEGER */
            long allowPOP3Status;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */
  unsigned long idx;

} allowPOP3Table_context;

#ifndef VARBIND
#define VARBIND

typedef struct VarBind{
    char  acVariable[MAX_OID_LEN];
    char cType;
    char pcValue [255];
}stVarBindArgs;

#endif /*VARBIND*/ 


/*************************************************************
 * function declarations
 */
void init_allowPOP3Table(void);
void initialize_table_allowPOP3Table(void);
const allowPOP3Table_context * allowPOP3Table_get_by_idx(netsnmp_index *);
const allowPOP3Table_context * allowPOP3Table_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int allowPOP3Table_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);
int allowPOP3Table_send_snmptrap(int length,stVarBindArgs *trapPDU,int port);
static int
allowPOP3Table_snmp_input(int operation,
       netsnmp_session * session,
       int reqid, netsnmp_pdu *pdu, void *magic);

void allowPOP3Table_Load_Container_From_File();


/*************************************************************
 * oid declarations
 */
extern oid allowPOP3Table_oid[];
extern size_t allowPOP3Table_oid_len;

#define allowPOP3Table_TABLE_OID 1,3,6,1,4,1,3204,1,3,34,4,6
    
/*************************************************************
 * column number definitions for table allowPOP3Table
 */
#define COLUMN_ALLOWPOP3INDEX 1
#define COLUMN_ALLOWPOP3ID 2
#define COLUMN_ALLOWPOP3IPADDRESS 3
#define COLUMN_ALLOWPOP3PORTNO 4
#define COLUMN_ALLOWPOP3STATUS 5
#define allowPOP3Table_COL_MIN 2
#define allowPOP3Table_COL_MAX 5

/* comment out the following line if you don't handle SET-REQUEST for allowPOP3Table */
#define allowPOP3Table_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define allowPOP3Table_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define allowPOP3Table_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define allowPOP3Table_CAN_MODIFY_ACTIVE_ROW */

#ifdef allowPOP3Table_SET_HANDLING

int allowPOP3Table_extract_index( allowPOP3Table_context * ctx, netsnmp_index * hdr );

void allowPOP3Table_set_reserve1( netsnmp_request_group * );
void allowPOP3Table_set_reserve2( netsnmp_request_group * );
void allowPOP3Table_set_action( netsnmp_request_group * );
void allowPOP3Table_set_commit( netsnmp_request_group * );
void allowPOP3Table_set_free( netsnmp_request_group * );
void allowPOP3Table_set_undo( netsnmp_request_group * );

allowPOP3Table_context * allowPOP3Table_duplicate_row( allowPOP3Table_context* );
netsnmp_index * allowPOP3Table_delete_row( allowPOP3Table_context* );

int allowPOP3Table_can_activate(allowPOP3Table_context *undo_ctx,
                      allowPOP3Table_context *row_ctx,
                      netsnmp_request_group * rg);
int allowPOP3Table_can_deactivate(allowPOP3Table_context *undo_ctx,
                        allowPOP3Table_context *row_ctx,
                        netsnmp_request_group * rg);
int allowPOP3Table_can_delete(allowPOP3Table_context *undo_ctx,
                    allowPOP3Table_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef allowPOP3Table_ROW_CREATION
allowPOP3Table_context * allowPOP3Table_create_row( netsnmp_index* );
#endif
#endif

#ifdef allowPOP3Table_IDX2
allowPOP3Table_context * allowPOP3Table_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** ALLOWPOP3TABLE_H */

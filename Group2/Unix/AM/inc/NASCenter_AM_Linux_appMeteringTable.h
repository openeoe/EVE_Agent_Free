/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.15.2.1 2003/02/27 05:59:41 rstory Exp $
 *
 * $Id: NASCenter_AM_Linux_appMeteringTable.h,v 1.1 2003/11/13 06:16:16 guga Exp $
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef APPMETERINGTABLE_H
#define APPMETERINGTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

/** #define values**/
#define MAX_OID_LEN 128
#define MAX_VAR_LEN 255
#define NO_OF_FIELDS 16


        /** Index appMeteringIndex is internal */

typedef struct appMeteringTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
        /** UNSIGNED32 = ASN_UNSIGNED */
            unsigned long appMeteringIndex;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringID[255];
            long appMeteringID_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringName[255];
            long appMeteringName_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringDescription[255];
            long appMeteringDescription_len;

        /** DateAndTime = ASN_OCTET_STR */
            unsigned char appMeteringCreatedDateTime[65535];
            long appMeteringCreatedDateTime_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringCreatedUserID[255];
            long appMeteringCreatedUserID_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringCreatedUserName[255];
            long appMeteringCreatedUserName_len;

        /** DateAndTime = ASN_OCTET_STR */
            unsigned char appMeteringStartTime[65535];
            long appMeteringStartTime_len;

        /** DateAndTime = ASN_OCTET_STR */
            unsigned char appMeteringEndTime[65535];
            long appMeteringEndTime_len;

        /** INTEGER = ASN_INTEGER */
            long appMeteringReaction;

        /** RowStatus = ASN_INTEGER */
            long appMeteringStatus;

        /** DateAndTime = ASN_OCTET_STR */
            unsigned char appMeteringLastUpdatedDateAndTime[65535];
            long appMeteringLastUpdatedDateAndTime_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringApplicationName[255];
            long appMeteringApplicationName_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringUserName[255];
            long appMeteringUserName_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringBinaryName[255];
            long appMeteringBinaryName_len;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char appMeteringAlertMessage[255];
            long appMeteringAlertMessage_len;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} appMeteringTable_context;

#ifndef VARBIND
#define VARBIND

typedef struct VarBind{
    char  acVariable[MAX_OID_LEN];
    char cType;
    char pcValue [255];
}stVarBindArgs;
#endif /*VARBIND*/

/*************************************************************
 * function declarations
 */
void init_appMeteringTable(void);
void initialize_table_appMeteringTable(void);
const appMeteringTable_context * appMeteringTable_get_by_idx(netsnmp_index *);
const appMeteringTable_context * appMeteringTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int appMeteringTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);
int appMeteringTable_send_snmptrap(int length,stVarBindArgs *trapPDU,int port);
static int
appMeteringTable_snmp_input(int operation,
       netsnmp_session * session,
       int reqid, netsnmp_pdu *pdu, void *magic);


/*************************************************************
 * oid declarations
 */
extern oid appMeteringTable_oid[];
extern size_t appMeteringTable_oid_len;

#define appMeteringTable_TABLE_OID 1,3,6,1,4,1,3204,1,3,34,3
    
/*************************************************************
 * column number definitions for table appMeteringTable
 */
#define COLUMN_APPMETERINGINDEX 1
#define COLUMN_APPMETERINGID 2
#define COLUMN_APPMETERINGNAME 3
#define COLUMN_APPMETERINGDESCRIPTION 4
#define COLUMN_APPMETERINGCREATEDDATETIME 5
#define COLUMN_APPMETERINGCREATEDUSERID 6
#define COLUMN_APPMETERINGCREATEDUSERNAME 7
#define COLUMN_APPMETERINGSTARTTIME 8
#define COLUMN_APPMETERINGENDTIME 9
#define COLUMN_APPMETERINGREACTION 10
#define COLUMN_APPMETERINGSTATUS 11
#define COLUMN_APPMETERINGLASTUPDATEDDATEANDTIME 12
#define COLUMN_APPMETERINGAPPLICATIONNAME 13
#define COLUMN_APPMETERINGUSERNAME 14
#define COLUMN_APPMETERINGBINARYNAME 15
#define COLUMN_APPMETERINGALERTMESSAGE 16
#define appMeteringTable_COL_MIN 2
#define appMeteringTable_COL_MAX 16

/* comment out the following line if you don't handle SET-REQUEST for appMeteringTable */
#define appMeteringTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define appMeteringTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define appMeteringTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define appMeteringTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef appMeteringTable_SET_HANDLING

int appMeteringTable_extract_index( appMeteringTable_context * ctx, netsnmp_index * hdr );

void appMeteringTable_set_reserve1( netsnmp_request_group * );
void appMeteringTable_set_reserve2( netsnmp_request_group * );
void appMeteringTable_set_action( netsnmp_request_group * );
void appMeteringTable_set_commit( netsnmp_request_group * );
void appMeteringTable_set_free( netsnmp_request_group * );
void appMeteringTable_set_undo( netsnmp_request_group * );

appMeteringTable_context * appMeteringTable_duplicate_row( appMeteringTable_context* );
netsnmp_index * appMeteringTable_delete_row( appMeteringTable_context* );

int appMeteringTable_can_activate(appMeteringTable_context *undo_ctx,
                      appMeteringTable_context *row_ctx,
                      netsnmp_request_group * rg);
int appMeteringTable_can_deactivate(appMeteringTable_context *undo_ctx,
                        appMeteringTable_context *row_ctx,
                        netsnmp_request_group * rg);
int appMeteringTable_can_delete(appMeteringTable_context *undo_ctx,
                    appMeteringTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef appMeteringTable_ROW_CREATION
appMeteringTable_context * appMeteringTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef appMeteringTable_IDX2
appMeteringTable_context * appMeteringTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** APPMETERINGTABLE_H */

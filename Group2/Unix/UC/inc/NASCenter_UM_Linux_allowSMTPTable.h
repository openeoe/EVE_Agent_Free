/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.15.2.1 2003/02/27 05:59:41 rstory Exp $
 *
 * $Id: NASCenter_UM_Linux_allowSMTPTable.h,v 1.1 2003/11/13 06:19:01 guga Exp $
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef ALLOWSMTPTABLE_H
#define ALLOWSMTPTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

/** #define values**/
#define MAX_OID_LEN 128
#define MAX_VAR_LEN 255
#define NO_OF_FIELDS 5

       /** Index allowSMTPIndex is internal */

typedef struct allowSMTPTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
        /** UNSIGNED32 = ASN_UNSIGNED */
            unsigned long allowSMTPIndex;

        /** DisplayString = ASN_OCTET_STR */
            unsigned char allowSMTPID[255];
            long allowSMTPID_len;

        /** OCTETSTR = ASN_OCTET_STR */
            unsigned char allowSMTPIPAddress[65535];
            long allowSMTPIPAddress_len;

        /** INTEGER = ASN_INTEGER */
            long allowSMTPPortNo;

        /** RowStatus = ASN_INTEGER */
            long allowSMTPStatus;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} allowSMTPTable_context;

#ifndef VARBIND
#define VARBIND

typedef struct VarBind{
    char  acVariable[MAX_OID_LEN];
    char cType;
    char pcValue [255];
}stVarBindArgs;

#endif /*VARBIND*/

/*************************************************************
 * function declarations
 */
void init_allowSMTPTable(void);
void initialize_table_allowSMTPTable(void);
const allowSMTPTable_context * allowSMTPTable_get_by_idx(netsnmp_index *);
const allowSMTPTable_context * allowSMTPTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int allowSMTPTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);
int allowSMTPTble_send_snmptrap(int length,stVarBindArgs *trapPDU,int port);
static int
allowSMTPTable_snmp_input(int operation,
       netsnmp_session * session,
       int reqid, netsnmp_pdu *pdu, void *magic);



/*************************************************************
 * oid declarations
 */
extern oid allowSMTPTable_oid[];
extern size_t allowSMTPTable_oid_len;

#define allowSMTPTable_TABLE_OID 1,3,6,1,4,1,3204,1,3,34,4,5
    
/*************************************************************
 * column number definitions for table allowSMTPTable
 */
#define COLUMN_ALLOWSMTPINDEX 1
#define COLUMN_ALLOWSMTPID 2
#define COLUMN_ALLOWSMTPIPADDRESS 3
#define COLUMN_ALLOWSMTPPORTNO 4
#define COLUMN_ALLOWSMTPSTATUS 5
#define allowSMTPTable_COL_MIN 2
#define allowSMTPTable_COL_MAX 5

/* comment out the following line if you don't handle SET-REQUEST for allowSMTPTable */
#define allowSMTPTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define allowSMTPTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define allowSMTPTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define allowSMTPTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef allowSMTPTable_SET_HANDLING

int allowSMTPTable_extract_index( allowSMTPTable_context * ctx, netsnmp_index * hdr );

void allowSMTPTable_set_reserve1( netsnmp_request_group * );
void allowSMTPTable_set_reserve2( netsnmp_request_group * );
void allowSMTPTable_set_action( netsnmp_request_group * );
void allowSMTPTable_set_commit( netsnmp_request_group * );
void allowSMTPTable_set_free( netsnmp_request_group * );
void allowSMTPTable_set_undo( netsnmp_request_group * );

allowSMTPTable_context * allowSMTPTable_duplicate_row( allowSMTPTable_context* );
netsnmp_index * allowSMTPTable_delete_row( allowSMTPTable_context* );

int allowSMTPTable_can_activate(allowSMTPTable_context *undo_ctx,
                      allowSMTPTable_context *row_ctx,
                      netsnmp_request_group * rg);
int allowSMTPTable_can_deactivate(allowSMTPTable_context *undo_ctx,
                        allowSMTPTable_context *row_ctx,
                        netsnmp_request_group * rg);
int allowSMTPTable_can_delete(allowSMTPTable_context *undo_ctx,
                    allowSMTPTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef allowSMTPTable_ROW_CREATION
allowSMTPTable_context * allowSMTPTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef allowSMTPTable_IDX2
allowSMTPTable_context * allowSMTPTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** ALLOWSMTPTABLE_H */

RELEASE_VERSION=FINAL_VERSION
rm -rf NuriBuild

# Setting PATH
PATH=/usr/local/bin:/usr/ccs/bin:/usr/contrib/bin:$PATH
export PATH

# List of OS Definitions
SolarisOS=SunOS
UnixWareOS=UnixWare
AixOS=AIX
HPOS=HP-UX
LinuxOS=Linux
#List Ends

#Some constants
ZERO=0

#Modules to be included

G2_MODULES="nuri/jobProcessMasterTable nuri/JobProcessDetailTable nuri/backupMasterTable nuri/backupDetailTable nuri/AgentInfo"

BACKUP_MODULE="Group2/Unix/BM/src"
JOB_MODULE="Group2/Unix/JobSched/src"
FD_MODULE="Group2/Windows/FD/src"


#List of OS Specific configuration options
SolarisOptions="--enable-pthread"
#End of List of Options

#Some common PATH definitions
NURI_UNIX_SRC_PATH=Group1
NET_SNMP_PATH=Group1/net-snmp-5.8

NURI_UNIX_SRC_G2_PATH=Group2/Unix/common/src
NURI_UNIX_INC_G2_PATH=Group2/Unix/common/inc

NET_SNMP_MIB_MODULE_PATH=Group1/net-snmp-5.8/agent/mibgroup/nuri
MA_PATH="Group2/G2Agent"
BUILD_HOME=`pwd`
CURRENT_PATH=`pwd`
#PATH definitions End

#Modules to be compiled
MIB_MODULES="nuri/trapTable nuri/collectDataTable nuri/logMonRowTable  nuri/agentInfo nuri/psMonitorTable"
#End of Modules

#Creating Nuri Directory under  NET-SNMP
mkdir  -p $NET_SNMP_MIB_MODULE_PATH
#Nuri Directory Created


#Copying MIB modules

#Agent Info Files
cp $NURI_UNIX_SRC_PATH/G2Configure/src/AgentInfo.c $NET_SNMP_MIB_MODULE_PATH
cp $NURI_UNIX_SRC_PATH/G2Configure/inc/AgentInfo.h $NET_SNMP_MIB_MODULE_PATH


#Common Files
cp Nuri/Project/Development/Common/NASCenter_Errors.h $NET_SNMP_MIB_MODULE_PATH
cp Nuri/Project/Development/Common/ctypes.h $NET_SNMP_MIB_MODULE_PATH
cp Nuri/Project/Development/Common/NASCenter_Common.h $NET_SNMP_MIB_MODULE_PATH
cp Nuri/Project/Development/Common/NASCenter_FileTrans.h $NET_SNMP_MIB_MODULE_PATH

#Copy the proc files
cp $CURRENT_PATH/Group1/net-snmp-5.8/agent/mibgroup/NuriEnterprise/Linux/src/cpuTable.c  $NET_SNMP_MIB_MODULE_PATH

cp $CURRENT_PATH/Group1/net-snmp-5.8/agent/mibgroup/NuriEnterprise/Linux/inc/cpuTable.h  $NET_SNMP_MIB_MODULE_PATH

#For File Transfer
cp Nuri/Project/Development/Common/NASCenter_Errors.h $NURI_UNIX_INC_G2_PATH
cp Nuri/Project/Development/Common/ctypes.h $NURI_UNIX_INC_G2_PATH
cp Nuri/Project/Development/Common/NASCenter_Common.h  $NURI_UNIX_INC_G2_PATH


#Group2 Modules
#Job Process Master Files
cp $NURI_UNIX_SRC_PATH/G2Configure/src/jobProcessMasterTable.c $NET_SNMP_MIB_MODULE_PATH
cp $NURI_UNIX_SRC_PATH/G2Configure/inc/jobProcessMasterTable.h $NET_SNMP_MIB_MODULE_PATH

#Job Process Detail Files
cp $NURI_UNIX_SRC_PATH/G2Configure/src/JobProcessDetailTable.c $NET_SNMP_MIB_MODULE_PATH
cp $NURI_UNIX_SRC_PATH/G2Configure/inc/JobProcessDetailTable.h $NET_SNMP_MIB_MODULE_PATH

#Backup Master Files
cp $NURI_UNIX_SRC_PATH/G2Configure/src/backupMasterTable.c $NET_SNMP_MIB_MODULE_PATH
cp $NURI_UNIX_SRC_PATH/G2Configure/inc/backupMasterTable.h $NET_SNMP_MIB_MODULE_PATH

#Backup Detail Table Files
cp $NURI_UNIX_SRC_PATH/G2Configure/src/backupDetailTable.c $NET_SNMP_MIB_MODULE_PATH
cp $NURI_UNIX_SRC_PATH/G2Configure/inc/backupDetailTable.h $NET_SNMP_MIB_MODULE_PATH



#Copying MIB modules End

#Installing pcap
if ! [ -e "/usr/local/include/pcap/pcap.h" -o -e "/usr/include/pcap/pcap.h" -o -e "/usr/local/include/pcap.h" ]
	then
		echo "Installing pcap"
		gunzip libpcap-0.8.1-316.tar.gz
		tar -xvf libpcap-0.8.1-316.tar
		cd	libpcap-0.8.1
		./configure
		make
		make install
	else
		echo "Pcap already Installed"
fi

if [ $? -ne $ZERO ]
	then
	echo "Pcap Install Failed"
	exit
fi

cd $BUILD_HOME

#File Transfer Lib

cd $NURI_UNIX_SRC_G2_PATH
make -f makefile
if [ $? -ne $ZERO ]
	then
	echo "File Transfer Library install Failed"
	exit
fi
cp ../libs/libNASC_FTP.a /usr/local/lib

#Building Agent
cd $BUILD_HOME
cd $NET_SNMP_PATH
OS=`uname -a | cut -d " " -f 1`
if [ $OS = $SolarisOS ]
	then
		echo Building for $SolarisOS
		cp agent/mibgroup/NuriEnterprise/Solaris/src/*.c agent/mibgroup/nuri
		cp agent/mibgroup/NuriEnterprise/Solaris/inc/*.h agent/mibgroup/nuri
		./configure $SolarisOptions --with-mib-modules="mibII host $G2_MODULES" --with-libs="-lpthread -lpcap -lNASC_FTP"

                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $BACKUP_MODULE
                make -f Makefile_BM_Sol clean 
                make -f Makefile_BM_Sol
                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $JOB_MODULE
                echo Building for Job Process Module
                make -f Makefile_JS_Sol  clean
                make -f Makefile_JS_Sol  
                cd $CURRENT_PATH
                cd $FD_MODULE
                echo Building for FD Module
                make -f Makefile_FD_Sol clean
                make -f Makefile_FD_Sol
                cd $CURRENT_PATH
                cd $NET_SNMP_PATH
	elif [ $OS = $UnixWareOS ]
	then

		echo Building for $UnixWareOS
		cp agent/mibgroup/mibII/ip_uxw.c agent/mibgroup/mibII/ip.c
		cp agent/mibgroup/mibII/ip_uxw.h agent/mibgroup/mibII/ip.h
		cp agent/mibgroup/mibII/tcp_uxw.c agent/mibgroup/mibII/tcp.c
		cp agent/mibgroup/mibII/tcp_uxw.h agent/mibgroup/mibII/tcp.h
		cp agent/mibgroup/mibII/udp_uxw.c agent/mibgroup/mibII/udp.c
		cp agent/mibgroup/mibII/udp_uxw.h agent/mibgroup/mibII/udp.h
		cp agent/mibgroup/mibII/icmp_uxw.c agent/mibgroup/mibII/icmp.c
		cp agent/mibgroup/mibII/icmp_uxw.h agent/mibgroup/mibII/icmp.h
		cp agent/mibgroup/mibII/icmp_stat_uxw.h agent/mibgroup/mibII/icmp_stat.h
		cp agent/mibgroup/mibII/interfaces_uxw.h agent/mibgroup/mibII/interfaces.h
		cp agent/mibgroup/mibII/interfaces_uxw.c agent/mibgroup/mibII/interfaces.c
		cp agent/mibgroup/NuriEnterprise/UnixWare/src/*.c agent/mibgroup/nuri
		cp agent/mibgroup/NuriEnterprise/UnixWare/inc/*.h agent/mibgroup/nuri
		./configure --enable-mini-agent --host=i586-pc-sysv4 --with-libs="-lsocket -lnsl -lthread -lgen -lNASC_FTP" --enable-shared=no --enable-reentrant --with-mib-modules="mibII/system_mib mibII/sysORTable host/hrSystem host/hrFSTable host/hrSWRunTable host/hrSWRunPerfEntry host/hrStorage host/hr_proc mibII/ip mibII/tcp mibII/udp mibII/icmp mibII/interfaces $G2_MODULES"

                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $BACKUP_MODULE
                make -f Makefile_BM_UW clean 
                make -f Makefile_BM_UW 
                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $JOB_MODULE
                echo Building for Job Process Module
                make -f Makefile_JS_UW  clean
                make -f Makefile_JS_UW  
                cd $CURRENT_PATH
                cd $FD_MODULE
                echo Building for FD Module
                make -f Makefile_FD_UW clean
                make -f Makefile_FD_UW
                cd $CURRENT_PATH
                cd $NET_SNMP_PATH
	elif [ $OS = $AixOS ]
	then
		echo Building for $AixOS
		cp agent/mibgroup/NuriEnterprise/IBM-AX/src/*.c agent/mibgroup/nuri
		cp agent/mibgroup/NuriEnterprise/IBM-AX/inc/*.h agent/mibgroup/nuri
./configure --with-cflags="-Daix4" --with-libs="-lperfstat -lpthread -llvm -lcfg -lodm -lpcap -lNASC_FTP" --disable-shared --with-mib-modules="host mibII $G2_MODULES" --with-out-mib-modules="ucd_snmp snmpv3mibs notification target agent_mibs agentx agent_mibs utilities"
		cp ../../net-snmp-config.h  include/net-snmp/

                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $BACKUP_MODULE
                make -f Makefile_BM_AIX clean 
                make -f Makefile_BM_AIX 
                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $JOB_MODULE
                echo Building for Job Process Module
                make -f Makefile_JS_AIX  clean
                make -f Makefile_JS_AIX  
                cd $CURRENT_PATH
                cd $FD_MODULE
                echo Building for FD Module
                make -f Makefile_FD_AIX clean
                make -f Makefile_FD_AIX
                cd $CURRENT_PATH
                cd $NET_SNMP_PATH
	elif [ $OS = $HPOS ]
	then
		echo Building for $HPOS
		cp agent/mibgroup/NuriEnterprise/HP-Unix/src/*.c agent/mibgroup/nuri
		cp agent/mibgroup/NuriEnterprise/HP-Unix/inc/*.h agent/mibgroup/nuri
                ./configure --with-mib-modules="mibII host $G2_MODULES" --with-out-mib-modules="ucd_snmp notification agent_mibs utilities" --enable-pthread --with-libs="-lpthread -lnm -lpcap -lNASC_FTP"

                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $BACKUP_MODULE
                make -f Makefile_BM_Linux clean 
                make -f Makefile_BM_Linux 
                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $JOB_MODULE
                echo Building for Job Process Module
                make -f Makefile_JS_HP  clean
                make -f Makefile_JS_HP  
                cd $CURRENT_PATH
                cd $FD_MODULE
                echo Building for FD Module
                make -f Makefile_FD_HP clean
                make -f Makefile_FD_HP
                cd $CURRENT_PATH
                cd $CURRENT_PATH
                cd $NET_SNMP_PATH
        elif [ $OS = $LinuxOS ]
	then
                
		make distclean
                ./configure --with-mib-modules="host mibII nuri/cpuTable $G2_MODULES " --with-libs="-lpthread -lpcap -lNASC_FTP"
                echo Building for Backup Module
                #Copying Libraries
                cd $CURRENT_PATH
                cd $BACKUP_MODULE
                make -f Makefile_BM_Linux clean 
                make -f Makefile_BM_Linux 
                echo Building for Backup Module
                cd $CURRENT_PATH
                cd $JOB_MODULE
                echo Building for Job Process Module
                make -f Makefile_JS_Linux  clean
                make -f Makefile_JS_Linux  
                cd $CURRENT_PATH
                cd $FD_MODULE
                echo Building for FD Module
                make -f Makefile_FD_Linux clean
                make -f Makefile_FD_Linux
                cd $CURRENT_PATH
                cd $NET_SNMP_PATH

fi
if [ $? -ne $ZERO ]
	then
	echo "Configure Failed"
	exit
fi
make installlibs
if [ $? -ne $ZERO ]
	then
	echo "Make installlibs Failed"
	exit
fi
make installsbin
if [ $? -ne $ZERO ]
	then
	echo "Make installsbin Failed"
	exit
fi
cd $CURRENT_PATH

#Creating Package Directories
echo Creating Package
mkdir -p NuriBuild
mkdir -p NuriBuild/sbin
mkdir -p NuriBuild/conf
mkdir -p NuriBuild/mibs
mkdir -p NuriBuild/lib

#Copying Libraries
#echo Copying Libraries
cp /usr/local/lib/libnetsnmp* NuriBuild/lib



#Copy the bins to NuriBuild/sbin dir
cd $CURRENT_PATH
cd $BACKUP_MODULE
cp BACKUP*  $CURRENT_PATH/NuriBuild/sbin
cd $CURRENT_PATH

#Copy the bins to NuriBuild/sbin dir
cd $CURRENT_PATH
cd $JOB_MODULE
cp JOB_*  $CURRENT_PATH/NuriBuild/sbin
cd $CURRENT_PATH

#Copy the bins to NuriBuild/sbin dir
cd $FD_MODULE
cp FD_*  $CURRENT_PATH/NuriBuild/sbin
cd $CURRENT_PATH

#Copying Binaries
echo Copying Binaries
cp /usr/local/sbin/snmpd NuriBuild/sbin/NASCenterAgentG2
#cp /usr/local/sbin/snmptrapd NuriBuild/sbin/
#cp /usr/local/sbin/server_udp NuriBuild/sbin/

#Copying mibs
echo Copying mibs
cp Nuri/DeliveryDocs/Docs/NURI-MIB.mib NuriBuild/mibs/

#Copying conf
echo Copying conf
cp Nuri/DeliveryDocs/Docs/*.conf NuriBuild/conf/

#Archiving
echo Archiving Package
cd NuriBuild
tar -cvf NASCenterAgent_$OS_$RELEASE_VERSION.tar *
gzip *.tar
echo Build Complete
